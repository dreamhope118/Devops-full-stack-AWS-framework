---
AWSTemplateFormatVersion: '2010-09-09'
Description: MU environment for EC2 microservices
Parameters:
  Namespace:
    Type: String
    Description: Namespace for stack prefixes
  EnvironmentName:
    Type: String
    Description: Name of environment used for resource namespace
  EC2InstanceProfileArn:
    Type: String
    Description: ARN of instance profile for EC2 instance to assume
  InstanceType:
    Type: String
    Description: Instance type to use.
    Default: t3.micro
  DesiredCapacity:
    Type: Number
    Default: '1'
    Description: Number of instances to launch in your ECS cluster
  MinSize:
    Type: Number
    Default: '1'
    Description: Minimum number of instances that can be launched in your ECS cluster
  MaxSize:
    Type: Number
    Default: '2'
    Description: Maximum number of instances that can be launched in your ECS cluster
  KeyName:
    Type: String
    Description: KeyName to associate with worker instances.  Leave blank to disable SSH access.
    Default: ''
  SshAllow:
    Description: Subnet from which to allow SSH access.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: 'must be a valid CIDR block: x.x.x.x/x.'
  TargetCPUReservation:
    Description: Target CPU reservation % for autoscaling
    Type: Number
    Default: '75'
  TargetMemoryReservation:
    Description: Target Memory reservation % for autoscaling
    Type: Number
    Default: '75'
  ImageId:
    Description: ECS AMI to launch
    Type: String
    Default: ''
  ImageOsType:
    Description: OS Type for ECS AMI
    Type: String
    Default: 'amazon'
    AllowedValues:
    - 'amazon'
    - 'centos7'
    - 'windows'
  InstanceSubnetIds:
    Type: String
    Description: Name of the value to import for the ecs subnet ids
  VpcId:
    Type: String
    Description: Name of the value to import for the VpcId
  HttpProxy:
    Type: String
    Description: Proxy to use from ECS cluster instances (host:port)
    Default: ''
  ElbSecurityGroup:
    Type: String
    Description: The security group to add to the ECS instance for ELB access
Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${VpcId}
      GroupDescription: Microservice Host Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref SshAllow
  Host2HostRuleIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      SourceSecurityGroupId: !GetAtt InstanceSecurityGroup.GroupId
      GroupId: !GetAtt InstanceSecurityGroup.GroupId
  Host2HostRuleEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      DestinationSecurityGroupId: !GetAtt InstanceSecurityGroup.GroupId
      GroupId: !GetAtt InstanceSecurityGroup.GroupId
  Host2InternetEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: 'tcp'
      FromPort: '0'
      ToPort: '65535'
      CidrIp: '0.0.0.0/0'
      GroupId: !GetAtt InstanceSecurityGroup.GroupId
Outputs:
  VpcId:
    Value:
      Fn::ImportValue: !Sub ${VpcId}
    Description: Vpc Id for the environment
    Export:
      Name: !Sub ${AWS::StackName}-VpcId
  InstanceSecurityGroup:
    Value: !Ref InstanceSecurityGroup
    Description: Security Group ID for the microservice instances
    Export:
      Name: !Sub ${AWS::StackName}-InstanceSecurityGroup
  InstanceSubnetIds:
    Value:
      Fn::ImportValue: !Sub ${InstanceSubnetIds}
    Description: Subnet Ids for the ECS cluster
    Export:
      Name: !Sub ${AWS::StackName}-InstanceSubnetIds
  KeyName:
    Value: !Ref KeyName
  InstanceType:
    Value: !Ref InstanceType
  SshAllow:
    Value: !Ref SshAllow
  ImageId:
    Value: !Ref ImageId
  ImageOsType:
    Value: !Ref ImageOsType
  HttpProxy:
    Value: !Ref HttpProxy
  ElbSecurityGroup:
    Value: !Ref ElbSecurityGroup